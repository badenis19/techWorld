{"ast":null,"code":"import nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n  /* istanbul ignore else (See: https://github.com/graphql/graphql-js/issues/2317) */\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}","map":{"version":3,"sources":["/Users/warren/code/badenis19/front-end-exercices/techWorld/client/node_modules/graphql/jsutils/defineToJSON.mjs"],"names":["nodejsCustomInspectSymbol","defineToJSON","classObject","fn","arguments","length","undefined","prototype","toString","toJSON","inspect"],"mappings":"AAAA,OAAOA,yBAAP,MAAsC,iCAAtC;AACA;;;;;AAKA,eAAe,SAASC,YAAT,CAAsBC,WAAtB,EAAmC;AAChD,MAAIC,EAAE,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEF,WAAW,CAACK,SAAZ,CAAsBC,QAAnG;AACAN,EAAAA,WAAW,CAACK,SAAZ,CAAsBE,MAAtB,GAA+BN,EAA/B;AACAD,EAAAA,WAAW,CAACK,SAAZ,CAAsBG,OAAtB,GAAgCP,EAAhC;AACA;;AAEA,MAAIH,yBAAJ,EAA+B;AAC7BE,IAAAA,WAAW,CAACK,SAAZ,CAAsBP,yBAAtB,IAAmDG,EAAnD;AACD;AACF","sourcesContent":["import nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n  /* istanbul ignore else (See: https://github.com/graphql/graphql-js/issues/2317) */\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}